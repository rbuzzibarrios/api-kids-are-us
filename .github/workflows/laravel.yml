name: API-KIDS-R-US

on:
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  laravel-build:
    uses: ./.github/workflows/workflow-build.yml
    secrets: inherit

  laravel-lint-code:
    needs: laravel-build
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - uses: actions/checkout@v3

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        id: install-dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: PHP Pint test
        id: php-pint-test
        run: vendor/bin/pint --test

      - name: PHPSTAN CODE ANALYZE
        id: phpstan-analyze
        run: vendor/bin/phpstan analyse --memory-limit=2G --no-progress

  laravel-test:
    needs: laravel-lint-code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.2']
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - uses: actions/checkout@v3

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        id: install-dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Dump autoload
        id: dump-autoload
        if: steps.composer-cache.outputs.cache-hit == 'true'
        run: composer dump-autoload

      - name: Generate key
        id: generate-key
        run: php artisan key:generate

      - name: Migrate database application
        id: migrate-database-application
        run: php artisan migrate:fresh

      - name: Seed database application
        id: seed-database-application
        run: php artisan db:seed

      - name: Running Functional and Unit Tests
        id: running-tests
        run: php artisan test -p --coverage

      - name: Upload artifacts
        uses: actions/upload-artifact@master
        if: failure()
        with:
          name: Logs
          path: ./storage/logs